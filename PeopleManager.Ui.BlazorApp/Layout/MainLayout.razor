@using Vives.Presentation.Authentication
@inherits LayoutComponentBase

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IBearerTokenStore TokenStore
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container-fluid">
            <a class="navbar-brand" href="@AppRoutes.Home.Index">People Manager Blazor</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
            aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link text-dark" href="@AppRoutes.Home.Index">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" href="@AppRoutes.People.Index">People</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" href="@AppRoutes.Organizations.Index">Organizations</a>
                    </li>
                    <AuthorizeView>
                        <Authorized>
                            <li class="nav-item">
                                @{
                                    var username = string.Empty;
                                    if (context.User.HasClaim(c => c.Type == "sub"))
                                    {
                                        username = context.User.Claims.First(c => c.Type == "sub").Value;
                                    }
                                    @: @username
                                }
                            </li>
                            <li class="nav-item">
                                <button class="nav-link text-dark" @onclick="SignOut">Sign out</button>
                            </li>
                        </Authorized>
                        <NotAuthorized>
                            <li class="nav-item">
                                <a class="nav-link text-dark" href="@AppRoutes.Account.SignIn">Sign in</a>
                            </li>
                        </NotAuthorized>
                    </AuthorizeView>

                </ul>
            </div>
        </div>
    </nav>
</header>
<div class="container">
    <main role="main" class="pb-3">
        @Body
    </main>
</div>

<footer class="border-top footer text-muted">
    <div class="container">
        &copy; 2024 - People Manager Blazor
    </div>
</footer>

@code
{
    private void SignOut()
    {
        TokenStore.SetToken(string.Empty);
        ((TokenAuthenticationStateProvider)AuthenticationStateProvider).AuthenticateUser();
    }
}
